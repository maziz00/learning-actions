name: Cache Node and NPM Dependencies

description: This action allows to cache both Node and NPM dependencies based on the package-lock.json file.

inputs:
  node-version:
    description: NodeJS version to use
    default: 20.x
    required: false

  working-dir:
    description: The working directory of the application
    default: .
    required: true

  target-env:
    description: '"dev" or "prod". Controls whether dev dependencies are installed'
    default: dev
    required: false

runs:
  using: composite
  steps:
    - name: Setup NodeJS version ${{ inputs.node-version }}
      uses:  actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Cache dependencie
      id: cache
      uses: actions/cache@v3
      with:
        path: ${{ inputs.working-dir }}/node_modules
        key: node-modules-${{ inputs.target-env }}-${{ hashFiles(format('{0}/{1}', inputs.working-dir, 'package-lock.json' )) }}

    #   if: steps.cache.outputs.cache-hit != 'true' && inputs.target-env == 'dev'
    #   if: steps.cache.outputs.cache-hit != 'true' && inputs.target-env != 'dev'
    #   run: |
    #     # if [ $target-env = 'prod' ]; 
    #     # then 
    #     #     npm ci --omit=dev
    #     # else
    #     #     npm ci
    #     # fi
    #   shell: bash
    #   working-directory: ${{ inputs.working-dir }}

    - name: Install dependencies
      shell: bash
      run: ${{ inputs.target-env == 'dev' && 'npm ci' || 'npm ci --omit=dev'}}